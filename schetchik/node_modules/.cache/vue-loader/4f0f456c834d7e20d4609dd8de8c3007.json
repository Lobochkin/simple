{"remainingRequest":"D:\\sites\\simple\\schetchik\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\sites\\simple\\schetchik\\src\\components\\tfootAddRow.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\sites\\simple\\schetchik\\src\\components\\tfootAddRow.vue","mtime":1600439331426},{"path":"D:\\sites\\simple\\schetchik\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\sites\\simple\\schetchik\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\sites\\simple\\schetchik\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\sites\\simple\\schetchik\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\sites\\simple\\schetchik\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICd0Zm9vdEFkZFJvdycsCiAgICBwcm9wczogWydtZXRlcnMnLCAncHJpY2UnXSwKICAgIGRhdGEoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgYWRkTWV0ZXJzOiB7CiAgICAgICAgICAgICAgICBhY3Rpb246ICdhZGQnLAogICAgICAgICAgICAgICAgZGF0ZTogJycsCiAgICAgICAgICAgICAgICBlbGVjdHJpYzogJycsCiAgICAgICAgICAgICAgICBob3Rfd2F0ZXI6ICcnLAogICAgICAgICAgICAgICAgY29sZF93YXRlcjogJycsCiAgICAgICAgICAgICAgICB0b3RhbDogJycKICAgICAgICAgICAgfQogICAgICAgIH07CiAgICB9LAogICAgd2F0Y2g6IHsKICAgICAgICBtZXRlcnM6IGZ1bmN0aW9uKCkgewogICAgICAgICAgICB0aGlzLmFkZE1ldGVycyA9IHsKICAgICAgICAgICAgICAgIGFjdGlvbjogJ2FkZCcsCiAgICAgICAgICAgICAgICBkYXRlOiAnJywKICAgICAgICAgICAgICAgIGVsZWN0cmljOiAnJywKICAgICAgICAgICAgICAgIGhvdF93YXRlcjogJycsCiAgICAgICAgICAgICAgICBjb2xkX3dhdGVyOiAnJywKICAgICAgICAgICAgICAgIHRvdGFsOiAnJwogICAgICAgICAgICB9OwogICAgICAgIH0sCiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIHNldE1ldGVycygpIHsKICAgICAgICAgICAgaWYgKCF0aGlzLmFkZE1ldGVycy50b3RhbCkgewogICAgICAgICAgICAgICAgdGhpcy5jYWxjdWxhdGUoKTsKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAodGhpcy5hZGRNZXRlcnMudG90YWwpIHsKICAgICAgICAgICAgICAgIGxldCBkYXRhID0gbmV3IEZvcm1EYXRhKCk7CiAgICAgICAgICAgICAgICBmb3IgKGxldCBrZXkgaW4gdGhpcy5hZGRNZXRlcnMpIHsKICAgICAgICAgICAgICAgICAgICBkYXRhLmFwcGVuZChrZXksIHRoaXMuYWRkTWV0ZXJzW2tleV0pOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgdGhpcy4kZW1pdCgnYWRkLXJvdycsZGF0YSk7CiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIGdldEFtb3VudChkYXRhLCBvbGREYXRhKSB7CiAgICAgICAgICAgIGxldCBhbW91bnQgPSBNYXRoLnJvdW5kKChkYXRhLmhvdF93YXRlciAtIG9sZERhdGEuaG90X3dhdGVyKSAqIHRoaXMucHJpY2Uud2FybWluZyArICgoZGF0YS5ob3Rfd2F0ZXIgLSBvbGREYXRhLmhvdF93YXRlcikgKyAoZGF0YS5jb2xkX3dhdGVyIC0gb2xkRGF0YS5jb2xkX3dhdGVyKSkgKiB0aGlzLnByaWNlLndhdGVyICsKICAgICAgICAgICAgICAgIChkYXRhLmVsZWN0cmljIC0gb2xkRGF0YS5lbGVjdHJpYykgKiB0aGlzLnByaWNlLmVsZWN0cmljKSArICfRgNGD0LEuJzsKICAgICAgICAgICAgcmV0dXJuIGFtb3VudDsKICAgICAgICB9LAogICAgICAgIGNhbGN1bGF0ZSgpIHsKICAgICAgICAgICAgZm9yIChsZXQgaSBpbiB0aGlzLmFkZE1ldGVycykgewogICAgICAgICAgICAgICAgaWYgKGkgPT09ICd0b3RhbCcpIGNvbnRpbnVlOwogICAgICAgICAgICAgICAgaWYgKCF0aGlzLmFkZE1ldGVyc1tpXSkgewogICAgICAgICAgICAgICAgICAgIGFsZXJ0KCfQndGD0LbQvdC+INC30LDQv9C+0LvQvdC40YLRjCDQstGB0LUg0L/QvtC70Y8nKTsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdGhpcy5hZGRNZXRlcnMudG90YWwgPSB0aGlzLmdldEFtb3VudCh0aGlzLmFkZE1ldGVycywgdGhpcy5tZXRlcnNbdGhpcy5tZXRlcnMubGVuZ3RoIC0gMV0pOwogICAgICAgIH0KICAgIH0KfTsK"},{"version":3,"sources":["tfootAddRow.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"tfootAddRow.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <tfoot>\n    <tr>\n        <td class=\"p-sm-3\">\n            <input class=\"form__input form__input-date\" type=\"date\" name=\"date\" v-model=\"addMeters.date\" autofocus>\n        </td>\n        <td class=\"p-sm-3\">\n            <input class=\"form__input form__input-electric\" type=\"number\" name=\"electric\" v-model=\"addMeters.electric\" maxlength=\"30\" required>\n        </td>\n        <td class=\"p-sm-3\">\n            <input class=\"form__input form__input-hot_water\" type=\"number\" name=\"hot_water\" v-model=\"addMeters.hot_water\" maxl=\"10000000\" required>\n        </td>\n        <td class=\"p-sm-3\">\n            <input class=\"form__input form__input-cold_water\" type=\"number\" name=\"cold_water\" v-model=\"addMeters.cold_water\" maxl=\"1000000\" required>\n        </td>\n        <td class=\"p-sm-3\">\n            <span class=\"total\">{{addMeters.total}}</span>\n        </td>\n        <td class=\"p-sm-3\">\n            <button @click=\"calculate\">\n                <i class=\"fa fa-calculator\"></i>\n            </button>\n            <button class=\"form__button_add\" name=\"button_add\" type=\"submit\" @click=\"setMeters\"><i class=\"fa fa-cloud-upload\"></i></button>\n        </td>\n    </tr>\n    </tfoot>\n</template>\n\n<script>\n    export default {\n        name: 'tfootAddRow',\n        props: ['meters', 'price'],\n        data() {\n            return {\n                addMeters: {\n                    action: 'add',\n                    date: '',\n                    electric: '',\n                    hot_water: '',\n                    cold_water: '',\n                    total: ''\n                }\n            };\n        },\n        watch: {\n            meters: function() {\n                this.addMeters = {\n                    action: 'add',\n                    date: '',\n                    electric: '',\n                    hot_water: '',\n                    cold_water: '',\n                    total: ''\n                };\n            },\n        },\n        methods: {\n            setMeters() {\n                if (!this.addMeters.total) {\n                    this.calculate();\n                }\n                if (this.addMeters.total) {\n                    let data = new FormData();\n                    for (let key in this.addMeters) {\n                        data.append(key, this.addMeters[key]);\n                    }\n                    this.$emit('add-row',data);\n                }\n            },\n            getAmount(data, oldData) {\n                let amount = Math.round((data.hot_water - oldData.hot_water) * this.price.warming + ((data.hot_water - oldData.hot_water) + (data.cold_water - oldData.cold_water)) * this.price.water +\n                    (data.electric - oldData.electric) * this.price.electric) + 'руб.';\n                return amount;\n            },\n            calculate() {\n                for (let i in this.addMeters) {\n                    if (i === 'total') continue;\n                    if (!this.addMeters[i]) {\n                        alert('Нужно заполнить все поля');\n                        return false;\n                    }\n                }\n                this.addMeters.total = this.getAmount(this.addMeters, this.meters[this.meters.length - 1]);\n            }\n        }\n    };\n</script>\n\n<style scoped>\n\n</style>"]}]}